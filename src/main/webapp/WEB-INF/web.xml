<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>GCATest</display-name>
    <servlet>
        <servlet-name>CallbackServlet</servlet-name>
        <servlet-class>de.kurashigegollub.dev.gcatest.CallbackServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>RequestServlet</servlet-name>
        <servlet-class>de.kurashigegollub.dev.gcatest.RequestServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>de.kurashigegollub.dev.gcatest.LoginServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>BaseServlet</servlet-name>
        <servlet-class>de.kurashigegollub.dev.gcatest.BaseServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ErrorServlet</servlet-name>
        <servlet-class>de.kurashigegollub.dev.gcatest.ErrorServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CallbackServlet</servlet-name>
        <url-pattern>/Callback</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>RequestServlet</servlet-name>
        <url-pattern>/Request</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/Login</url-pattern>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ErrorServlet</servlet-name>
        <url-pattern>/Error</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <!--
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    -->
    <description>
goal: create a web application to view a gmail user's calendar data,
with the option to forward the calendar data in a mail message

process: application operates as per the following

1 User opens the test application page and on loading, the user's
calender data for the next 2 weeks is retrieved and displayed.

2 Authenticate the user via any Google authentication method, OAuth,
AuthSub, ClientLogin, etc.
(http://code.google.com/apis/accounts/docs/GettingStarted.html)

3 User the Google Calendar API to retrieve user calendar data.
(http://code.google.com/apis/calendar/data/2.0/developers_guide.html)

4 The user can enter 1 or more mail address and click a button to open
a gmail compose window prepopulated with the calendar data.

notes:
- Please create your own gmail account for development.
- The test application should be developed in Java1.6 and run on Tomcat 6.0.
    
goal: create a web application to view a gmail user's calendar data,
with the option to forward the calendar data in a mail message

process: application operates as per the following

1 User opens the test application page and on loading, the user's
calender data for the next 2 weeks is retrieved and displayed.

2 Authenticate the user via any Google authentication method, OAuth,
AuthSub, ClientLogin, etc.
(http://code.google.com/apis/accounts/docs/GettingStarted.html)

3 User the Google Calendar API to retrieve user calendar data.
(http://code.google.com/apis/calendar/data/2.0/developers_guide.html)

4 The user can enter 1 or more mail address and click a button to open
a gmail compose window prepopulated with the calendar data.

notes:
- Please create your own gmail account for development.
- The test application should be developed in Java1.6 and run on Tomcat 6.0.

goal: create a web application to view a gmail user's calendar data,
with the option to forward the calendar data in a mail message

process: application operates as per the following

1 User opens the test application page and on loading, the user's
calender data for the next 2 weeks is retrieved and displayed.

2 Authenticate the user via any Google authentication method, OAuth,
AuthSub, ClientLogin, etc.
(http://code.google.com/apis/accounts/docs/GettingStarted.html)

3 User the Google Calendar API to retrieve user calendar data.
(http://code.google.com/apis/calendar/data/2.0/developers_guide.html)

4 The user can enter 1 or more mail address and click a button to open
a gmail compose window prepopulated with the calendar data.

notes:
- Please create your own gmail account for development.
- The test application should be developed in Java1.6 and run on Tomcat 6.0.
    
goal: create a web application to view a gmail user's calendar data,
with the option to forward the calendar data in a mail message

process: application operates as per the following

1 User opens the test application page and on loading, the user's
calender data for the next 2 weeks is retrieved and displayed.

2 Authenticate the user via any Google authentication method, OAuth,
AuthSub, ClientLogin, etc.
(http://code.google.com/apis/accounts/docs/GettingStarted.html)

3 User the Google Calendar API to retrieve user calendar data.
(http://code.google.com/apis/calendar/data/2.0/developers_guide.html)

4 The user can enter 1 or more mail address and click a button to open
a gmail compose window prepopulated with the calendar data.

notes:
- Please create your own gmail account for development.
- The test application should be developed in Java1.6 and run on Tomcat 6.0.
</description>
</web-app>
